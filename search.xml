<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python工具库大全]]></title>
    <url>%2F2018%2F02%2F09%2Fpython-tool%2F</url>
    <content type="text"><![CDATA[漏洞及渗透练习平台：WebGoat漏洞练习平台： https://github.com/WebGoat/WebGoat webgoat-legacy漏洞练习平台: https://github.com/WebGoat/WebGoat-Legacy zvuldirll漏洞练习平台： https://github.com/710leo/ZVulDrill vulapps漏洞练习平台： https://github.com/Medicean/VulApps dvwa漏洞练习平台：https://github.com/RandomStorm/DVWA 数据库注入练习平台 ： https://github.com/Audi-1/sqli-labs 用node编写的漏洞练习平台，like OWASP Node Goat： https://github.com/cr0hn/vulnerable-node Ruby编写的一款工具，生成含漏洞的虚拟机： https://github.com/cliffe/secgen 花式扫描器 ：Nmap端口扫描器： https://github.com/nmap/nmap 本地网络扫描器： https://github.com/SkyLined/LocalNetworkScanner 子域名扫描器： https://github.com/lijiejie/subDomainsBrute https://github.com/aboul3la/Sublist3r https://github.com/TheRook/subbrute https://github.com/infosec-au/altdns linux漏洞扫描： https://github.com/future-architect/vuls 基于端口扫描以及关联CVE: https://github.com/m0nad/HellRaiser 漏洞路由扫描器： https://github.com/jh00nbr/Routerhunter-2.0 迷你批量信息泄漏扫描脚本： https://github.com/lijiejie/BBScan Waf类型检测工具： https://github.com/EnableSecurity/wafw00f 服务器端口弱口令扫描器： https://github.com/wilson9x1/fenghuangscanner_v3 Fox-scan扫描器： https://github.com/fengxuangit/Fox-scan/ 信息搜集工具 :社工收集器： https://github.com/n0tr00t/Sreg Github信息搜集： https://github.com/sea-god/gitscan github Repo信息搜集工具： https://github.com/metac0rtex/GitHarvester 信息探测及扫描工具： https://github.com/darryllane/Bluto 内部网络信息扫描器： https://github.com/sowish/LNScan 远程桌面登录扫描器： https://github.com/linuz/Sticky-Keys-Slayer 网络基础设施渗透工具 https://github.com/SECFORCE/sparta SNMAP密码破解: https://github.com/SECFORCE/SNMP-Brute WEB：webshell大合集： https://github.com/tennc/webshell 渗透以及web攻击脚本： https://github.com/brianwrf/hackUtils web渗透小工具大合集： https://github.com/rootphantomer/hacktoolsfor_me XSS数据接收平台： https://github.com/firesunCN/BlueLotus_XSSReceiver XSS与CSRF工具： https://github.com/evilcos/xssor xss多功能扫描器： https://github.com/shawarkhanethicalhacker/BruteXSS web漏洞扫描器: https://github.com/andresriancho/w3af WEB漏洞扫描器： https://github.com/sullo/nikto 渗透常用小工具包： https://github.com/leonteale/pentestpackage web目录扫描器: https://github.com/maurosoria/dirsearch web向命令注入检测工具： https://github.com/stasinopoulos/commix 自动化SQL注入检查工具： https://github.com/epinna/tplmap SSL扫描器： https://github.com/rbsec/sslscan 安全工具集合： https://github.com/codejanus/ToolSuite apache日志分析器： https://github.com/mthbernardes/ARTLAS php代码审计工具： https://github.com/pwnsdx/BadCode web指纹识别扫描： https://github.com/urbanadventurer/whatweb 检查网站恶意攻击： https://github.com/ciscocsirt/malspider wordprees漏洞扫描器： https://github.com/wpscanteam/wpscan 固件漏洞扫描器： https://github.com/misterch0c/firminator_backend 数据库注入工具 https://github.com/sqlmapproject/sqlmap Web代理： https://github.com/zt2/sqli-hunter 新版中国菜刀： https://github.com/Chora10/Cknife git泄露利用EXP： https://github.com/lijiejie/GitHack 浏览器攻击框架： https://github.com/beefproject/beef 自动化绕过WAF脚本： https://github.com/khalilbijjou/WAFNinja https://github.com/owtf/wafbypasser 一款开源WAF： https://github.com/SpiderLabs/ModSecurity http命令行客户端： https://github.com/jkbrzt/httpie 浏览器调试利器： https://github.com/firebug/firebug DISCUZ漏洞扫描器： https://github.com/code-scan/dzscan 自动化代码审计工具 https://github.com/wufeifei/cobra 浏览器攻击框架： https://github.com/julienbedard/browsersploit tomcat自动后门部署： https://github.com/mgeeky/tomcatWarDeployer 网络空间指纹扫描器： https://github.com/nanshihui/Scan-T burpsuit之J2EE扫描插件： https://github.com/ilmila/J2EEScan windows域渗透工具：mimikatz明文注入： https://github.com/gentilkiwi/mimikatz Powershell渗透库合集： https://github.com/PowerShellMafia/PowerSploit Powershell tools合集： https://github.com/clymb3r/PowerShell powershell的mimikittenz: https://github.com/putterpanda/mimikittenz 域渗透教程: https://github.com/l3m0n/pentest_study Fuzz:Web向Fuzz工具 https://github.com/xmendez/wfuzz HTTP暴力破解，撞库攻击脚本 https://github.com/lijiejie/htpwdScan 漏洞利用及攻击框架：msf框架： https://github.com/rapid7/metasploit-framework pocsscan攻击框架： https://github.com/erevus-cn/pocscan Pocsuite攻击框架: https://github.com/knownsec/Pocsuite Beebeeto攻击框架： https://github.com/n0tr00t/Beebeeto-framework 漏洞POC&amp;EXP:ExploitDB官方git版本: https://github.com/offensive-security/exploit-database php漏洞代码分析： https://github.com/80vul/phpcodz CVE-2016-2107: https://github.com/FiloSottile/CVE-2016-2107 CVE-2015-7547 POC： https://github.com/fjserna/CVE-2015-7547 JAVA反序列化POC生成工具: https://github.com/frohoff/ysoserial JAVA反序列化EXP: https://github.com/foxglovesec/JavaUnserializeExploits Jenkins CommonCollections EXP: https://github.com/CaledoniaProject/jenkins-cli-exploit CVE-2015-2426 EXP (windows内核提权): https://github.com/vlad902/hacking-team-windows-kernel-lpe use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示): https://github.com/hxer/vulnapp php7缓存覆写漏洞Demo及相关工具: https://github.com/GoSecure/php7-opcache-override XcodeGhost木马样本: https://github.com/XcodeGhostSource/XcodeGhost 中间人攻击及钓鱼中间人攻击框架: https://github.com/secretsquirrel/the-backdoor-factory https://github.com/secretsquirrel/BDFProxy https://github.com/byt3bl33d3r/MITMf Inject code, jam wifi, and spy on wifi users: https://github.com/DanMcInerney/LANs.py 中间人代理工具: https://github.com/intrepidusgroup/mallory wifi钓鱼: https://github.com/sophron/wifiphisher 密码破解：密码破解工具: https://github.com/shinnok/johnny 本地存储的各类密码提取利器: https://github.com/AlessandroZ/LaZagne 二进制及代码分析工具：二进制分析工具 https://github.com/devttys0/binwalk 系统扫描器 https://github.com/quarkslab/binmap rp: https://github.com/0vercl0k/rp Windows Exploit Development工具 https://github.com/lillypad/badger 二进制静态分析工具（python）:https://github.com/bdcht/amoco Python Exploit Development Assistance for GDB: https://github.com/longld/peda 对BillGates Linux Botnet系木马活动的监控工具 https://github.com/ValdikSS/billgates-botnet-tracker 木马配置参数提取工具: https://github.com/kevthehermit/RATDecoders Shellphish编写的二进制分析工具（CTF向）: https://github.com/angr/angr 针对python的静态代码分析工具: https://github.com/yinwang0/pysonar2 一个自动化的脚本（shell）分析工具，用来给出警告和建议: https://github.com/koalaman/shellcheck 基于AST变换的简易Javascript反混淆辅助工具: https://github.com/ChiChou/etacsufbo EXP编写框架及工具：二进制EXP编写工具: https://github.com/t00sh/rop-tool CTF Pwn 类题目脚本编写框架: https://github.com/Gallopsled/pwntools an easy-to-use io library for pwning development: https://github.com/zTrix/zio 跨平台注入工具: https://github.com/frida/frida 哈希长度扩展攻击EXP： https://github.com/citronneur/rdpy 隐写：隐写检测工具 https://github.com/abeluck/stegdetect 各类安全资料:data_hacking合集: https://github.com/ClickSecurity/data_hacking mobile-security-wiki: https://github.com/exploitprotocol/mobile-security-wiki 书籍《reverse-engineering-for-beginners》: https://github.com/veficos/reverse-engineering-for-beginners 一些信息安全标准及设备配置: https://github.com/luyg24/IT_security APT相关笔记: https://github.com/kbandla/APTnotes Kcon资料: https://github.com/knownsec/KCon 《DO NOT FUCK WITH A HACKER》: https://github.com/citypw/DNFWAH 各类安全脑洞图： https://github.com/phith0n/Mind-Map 信息安全流程图： https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428 各类CTF资源近年ctf writeup大全: https://github.com/ctfs/write-ups-2016 https://github.com/ctfs/write-ups-2015 https://github.com/ctfs/write-ups-2014 fbctf竞赛平台Demo: https://github.com/facebook/fbctf ctf Resources: https://github.com/ctfs/resources ctf及黑客资源合集: https://github.com/bt3gl/My-Gray-Hacker-Resources ctf和安全工具大合集: https://github.com/zardus/ctf-tools ctf向 python工具包 https://github.com/P1kachu/v0lt 各类编程资源:大礼包（什么都有）: https://github.com/bayandin/awesome-awesomeness bash-handbook: https://github.com/denysdovhan/bash-handbook python资源大全: https://github.com/jobbole/awesome-python-cn git学习资料: https://github.com/xirong/my-git 安卓开源代码解析 https://github.com/android-cn/android-open-project python框架，库，资源大合集: https://github.com/vinta/awesome-python JS 正则表达式库（用于简化构造复杂的JS正则表达式）: https://github.com/VerbalExpressions/JSVerbalExpressions Python：python 正则表达式库（用于简化构造复杂的python正则表达式）: https://github.com/VerbalExpressions/ python任务管理以及命令执行库: https://github.com/pyinvoke/invoke python exe打包库: https://github.com/pyinstaller/pyinstaller Veil-Evasion免杀项目： https://github.com/Veil-Framework/Veil-Evasion py3 爬虫框架: https://github.com/orf/cyborg 一个提供底层接口数据包编程和网络协议支持的python库: https://github.com/CoreSecurity/impacket python requests 库: https://github.com/kennethreitz/requests python 实用工具合集: https://github.com/mahmoud/boltons python爬虫系统: https://github.com/binux/pyspider 科学上网：科学上网工具 https://github.com/XX-net/XX-Net 福利：微信自动抢红包动态库 https://github.com/east520/AutoGetRedEnv 微信抢红包插件（安卓版） https://github.com/geeeeeeeeek/WeChatLuckyMoney hardsed神器: https://github.com/yangyangwithgnu/hardseed 甲方安全工程师生存指南web索引及日志搜索工具： https://github.com/thomaspatzke/WASE 开源日志采集器： https://github.com/wgliang/logcool 扫描CS结构的web debuger https://github.com/Kozea/wdb 恢复sqlite数据库删除注册信息： https://github.com/aramosf/recoversqlite/ gps欺骗检测工具: https://github.com/zxsecurity/gpsnitch 应急处置响应框架: https://github.com/biggiesmallsAG/nightHawkResponse web安全开发指南: https://github.com/FallibleInc/security-guide-for-developers 各个知名厂商漏洞测试报告模板： https://github.com/juliocesarfort/public-pentesting-reports linux下恶意代码检测包： https://github.com/rfxn/linux-malware-detect 操作系统运行指标可视化框架： https://github.com/facebook/osquery 恶意代码分析系统： https://github.com/cuckoosandbox/cuckoo 定期搜索及存储web应用： https://github.com/Netflix/Scumblr 事件响应框架： https://github.com/google/grr 综合主机监控检测平台： https://github.com/ossec/ossec-hids 分布式实时数字取证系统： https://github.com/mozilla/mig Microsoft &amp; Unix 文件系统及硬盘取证工具： https://github.com/sleuthkit/sleuthkit 蜜罐：SSH蜜罐： https://github.com/desaster/kippo 蜜罐集合资源： https://github.com/paralax/awesome-honeypots kippo进阶版蜜罐： https://github.com/micheloosterhof/cowrie SMTP 蜜罐： https://github.com/awhitehatter/mailoney web应用程序蜜罐： https://github.com/mushorg/glastopf 数据库蜜罐： https://github.com/jordan-wright/elastichoney web蜜罐： https://github.com/atiger77/Dionaea 远控：用gmail充当C&amp;C服务器的后门 https://github.com/byt3bl33d3r/gcat 开源的远控： https://github.com/UbbeLoL/uRAT c#远控： https://github.com/hussein-aitlahcen/BlackHole]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云windows ecs性能大全篇介绍之内存]]></title>
    <url>%2F2018%2F01%2F31%2Fwindows%2F</url>
    <content type="text"><![CDATA[1.ECS 内存阿里云ECS服务器购买完成以后,默认是没有为系统配置虚拟内存的。确切的说是没有分配页面文件！虚拟内存是windows可使用的内存的总称，包括了你安装在机器上面的实际物理内存，还加上了磁盘上面的分页文件(pagefile.sys文件)当然物理内存是有限的，当现有的进程正在使用的内存超出可用的物理内存时，操作系统会将页（4KB片）的一个或多个虚拟地址空间移到计算机的硬盘。而后释放物理内存用于其他用途。正常情况下，当看到页面交换文件使用率持续上升而且不下降的时候，这时候有可能是系统的物理内存资源耗尽或是资源紧张。但并不代表全部可能是这样的。这个必须注意。应用程序可以通过Memory-Mapped files方法来直接操作页面交换文件。使用handle.exe工具可以了解到。使用命令：Handle -a -l 查看对应的pid所用到的虚拟内存大小。 如果禁用掉页面文件呢？系统的性能会不会有什么影响？阿里云的说法是说可以提高SSD的I/O性能。页面文件的存在会频繁的读写磁盘。而微软相关的专家给出的说法是这样的。 Some feel having no paging file results in better performance, but in general, having a paging file means Windows can write pages on the modified list (which represent pages that aren’t being accessed actively but have not been saved to disk) out to the paging file, thus making that memory available for more useful purposes (processes or file cache). Technet - Pushing the Limits of Windows: Virtual Memory 如果有一些进程并不是特别活跃，那么可以将它们放在磁盘上面，腾出更多的内存做其它的事情！不过我在公司的云服务器上面如果不设置分页文件的话，则经常会报虚拟内存不足，因为服务器上面运行的程序有时候分配的内存已经超出实际的物理内存，特别是安装了sqlserver之类的数据库特别经常容易发生！如果你的内存足够大，硬盘又是SSD的，可以不用分配！]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搜索不了问题修复]]></title>
    <url>%2F2018%2F01%2F29%2Fhexo-search%2F</url>
    <content type="text"><![CDATA[早上过来打开博客的时候，发现打开博客首页菜单搜索的时候，就一直停留在转圈的界面。用Chrome自带的开发者工具检查也没有任何的报错响应。仔细回想了一下，这两天所做的操作，就增加了一些插件和发布了一篇博客文章，其它的没有什么变动！开始进行应用自己解决问题的一些思路和方法： 1.开始解决问题。分析了一下，无非就是安装插件和发布了文章以后造成了，之前在安装这个本地搜索插件的时候，还有几篇的测试文章，而且显示都是正常的。撤消安装的插件放在后面排查，因为涉及的问题比较多，因此先检查了一下这两天发布的博客文章，只有一篇。 首先先保存这一篇内容，在本地调试，发现也是同样的问题。 删除掉这一篇文章，然后运行命令：hexo g &amp;&amp; hexo s –debug发现再次搜索发现正常，打开http://127.0.0.1:4000/search.xml ，报下面的错误：可以肯定就是因为搜索调用了search.xml，search.xml打开出错了，报编码问题。查了一下是第六行，刚好是文章的内容，因此用记事本打开这篇文章的md文件，保存为UTF-8. 再次打开，发现正常，看来还是由于文章的编码问题造成，用sublime text打开这个有问题的.md文件，发现一些问题文章带有显示BS这类的字符，所以出错了，这个是在来回切换输入法的时候造成的。以后需要注意点！]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github发布hexo站点后显示404的解决方案]]></title>
    <url>%2F2018%2F01%2F28%2F404-error%2F</url>
    <content type="text"><![CDATA[这个博客前天晚上弄起来的，这两天又陆续了添加了一些其它的插件，站点统计，RSS订阅,来必力评论功能。添加这些插件很简单，这边就不介绍了。这边遇到了一个问题就是每次更改发布推送到github后，发现站点都显示成404页面了，经排查才发现每次发布后。原来每次推送以后，根目录下面的CNAME被自动清空了。这个CNAME文件是你在github项目设置了自定义的域名后自动生成的. 而我发现我在本地用hexo d 命令发布部署命令后，输出了一段调试代码： 也就是说每次发布都会从public这个目录拷贝文件，放到.deploy_git这个隐藏目录下面，然后把.deploy_git目录下面的文件push上去，而我这个public目录下面没有CNAME这个文件，所以git repository对应的也会删除。因此我们需要在这个目录手动创建CNAME这个文件。CNAME文件内容的填写方法，只要把域名填写进去就可以了。注意不要带http://]]></content>
      <tags>
        <tag>github hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[快速搭建博客]]></title>
    <url>%2F2018%2F01%2F27%2Fjd%2F</url>
    <content type="text"><![CDATA[搭建博客，现有的开源程序很多，各种语言的都有，网络上经常遇到有： ASP的程序博客有Z-BLOGPHP的程序博客有WORDPRESSPYTHON的程序博客有WORDPRESSHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。这几个博客源码都有尝试过，各有各的好处，要说上手最快的应该是Hexo,这个博客框架安装起来，再配置一些外置的插件，网站就可以运行起来了，而且还可以使用github的空间，不像其它的源码部署麻烦，要自己去买服务器和安装，对于门外汉来说，确实挺麻烦的。]]></content>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试发布的文章]]></title>
    <url>%2F2018%2F01%2F27%2FnewBlog%2F</url>
    <content type="text"><![CDATA[这个博客是在hexo框架下面的开发的，因此开发一个博客显得就简单多了，我们只要配置一下网站的相关信息就可以了！]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
